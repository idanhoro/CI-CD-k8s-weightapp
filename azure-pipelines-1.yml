name: BootcampDockerCICD

trigger:
- master
- feature/*

resources:
- repo: self

# Continuous Integration Process...
stages:
- stage: Build
  displayName: Install Docker-Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: "CI-agents"
    steps:
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: 'docker-registry'
        repository: 'WeightTrackerApp'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

    # - upload: charts/app-chart
    #   artifact: charts/app-chart
    - task: HelmDeploy@0
      inputs:
        azureSubscriptionForACR: 'Azure Pass - Sponsorship (e66e6811-d470-408b-910d-b100ca295f46)'
        azureContainerRegistry: 'docker-registry'      
        azureResourceGroupForACR: 'NodeWeightTracker-AKS'
        command: 'package'
        chartPath: '**/charts/app-chart'
        chartName: 'weightApp'
        destination: '/home/ubuntu/charts'

    
  
- stage: DeployToStaging
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  displayName: Deploy staging stage
  jobs:
  - deployment: Deploy
    displayName: Deploy to staging
    pool:
      name: "CI-agents"
    environment: 'staging.default'
    variables:
      - group: "Staging-variables"
    strategy:
      runOnce:
        deploy:
         steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: $(k8s_conn)
              secretType: 'generic'
              secretName: 'secret.yml'
              secretArguments: '--from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) --from-literal=HOST=$(HOST) --from-literal=PORT=$(PORT) --from-literal=NODE_ENV=$(NODE_ENV) --from-literal=HOST_URL=$(HOST_URL) --from-literal=OKTA_CLIENT_ID=$(OKTA_CLIENT_ID) --from-literal=OKTA_CLIENT_SECRET=$(OKTA_CLIENT_SECRET) --from-literal=OKTA_ORG_URL=$(OKTA_ORG_URL)  --from-literal=PGHOST=$(PGHOST) --from-literal=PGUSERNAME=$(PGUSERNAME) --from-literal=PGDATABASE=$(PGDATABASE) --from-literal=PGPASSWORD=$(PGPASSWORD)  --from-literal=PGPORT=$(PGPORT)'
              
          - task: HelmInstaller@0
            inputs:
              helmVersion: '2.14.1'
              installKubectl: true
          - task: HelmDeploy@0
            inputs:
              azureSubscriptionForACR: 'Azure Pass - Sponsorship (e66e6811-d470-408b-910d-b100ca295f46)'
              azureContainerRegistry: 'docker-registry'      
              azureResourceGroupForACR: 'NodeWeightTracker-AKS'
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'staging-WeightTracker-default-1659481280965'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '/home/ubuntu/charts/chart-*.tgz'
